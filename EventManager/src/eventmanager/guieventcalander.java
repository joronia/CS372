/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eventmanager;

import java.io.*;
import java.util.*;
import javax.swing.DefaultListModel;

/**
 *
 * @author joronia17
 */
public class guieventcalander extends javax.swing.JFrame {
// dfkddghdklhs
    private event j = new event("", "", "", "", "");
    private eventcalander f = new eventcalander();
    private ArrayList<event> Events = new ArrayList();

    /**
     * Creates new form guieventcalander
     */
    public guieventcalander() {
        initComponents();
    }

    public ArrayList<event> readfromfile() {
        DefaultListModel listModel = (DefaultListModel) display.getModel();
        listModel.removeAllElements();
        display.setModel(listModel);
        try {
            File F = new File("Events.txt");
            BufferedReader rdr = new BufferedReader(new FileReader(F));
            String line = null;

            do {

                event e = new event("", "", "", "", "");
                if (j.equals(e)) {
                    break;
                }
                int w = 0;
                if (line != null) {
                    e.setname(line);
                    w = 1;
                }

                ArrayList<String> v = e.getValues();

                for (int i = w; i < v.size() && (line = rdr.readLine()) != null; i++) {
                    v.set(i, line);
                    System.out.println(line);
                }
                e.setValues(v);
                Events.add(e);
            } while ((line = rdr.readLine()) != null);

            rdr.close();
        } catch (Exception ex) {
            System.out.println("Something did not go right!");
        }
        return Events;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        eventname = new javax.swing.JTextField();
        location = new javax.swing.JTextField();
        month = new javax.swing.JTextField();
        date = new javax.swing.JTextField();
        year = new javax.swing.JTextField();
        evententer = new javax.swing.JButton();
        locationenter = new javax.swing.JButton();
        monthenter = new javax.swing.JButton();
        dateenter = new javax.swing.JButton();
        yearenter = new javax.swing.JButton();
        submit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        display = new javax.swing.JList();
        viewevents = new javax.swing.JButton();
        info = new javax.swing.JLabel();
        lsort = new javax.swing.JButton();
        dsort = new javax.swing.JButton();
        nsort = new javax.swing.JButton();
        info1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        eventname.setText("Event Name");
        eventname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventnameActionPerformed(evt);
            }
        });

        location.setText("Location Name");

        month.setText("Month");

        date.setText("Date");

        year.setText("Year");

        evententer.setText("Enter");
        evententer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                evententerActionPerformed(evt);
            }
        });

        locationenter.setText("Enter");
        locationenter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationenterActionPerformed(evt);
            }
        });

        monthenter.setText("Enter");
        monthenter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthenterActionPerformed(evt);
            }
        });

        dateenter.setText("Enter");
        dateenter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateenterActionPerformed(evt);
            }
        });

        yearenter.setText("Enter");
        yearenter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearenterActionPerformed(evt);
            }
        });

        submit.setText("Submit Event");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        display.setModel(new DefaultListModel<String>() {
            //@Override
            //public int getSize() { return f.getSize(); }
            //@Override
            //public event getElementAt(int i) { return f.getElement(i); }
            @Override
            public void addElement(String e) { 
                super.addElement(e); 
                //f.addevents(e); 
            }
            @Override
            public void add(int i,String e) { 
                super.add(i, e); 
                //f.addevents(e);

            }

        });
        jScrollPane1.setViewportView(display);

        viewevents.setText("View Events");
        viewevents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vieweventsActionPerformed(evt);
            }
        });

        lsort.setText("Sort by location");
        lsort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lsortActionPerformed(evt);
            }
        });

        dsort.setText("Sort by Date");
        dsort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dsortActionPerformed(evt);
            }
        });

        nsort.setText("Sort by Name");
        nsort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nsortActionPerformed(evt);
            }
        });

        info1.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(viewevents, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(144, 144, 144))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(year)
                                    .addComponent(month)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(eventname, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(date))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(dateenter)
                                            .addComponent(monthenter)
                                            .addComponent(yearenter))
                                        .addComponent(evententer, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(locationenter))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(submit)
                                .addGap(6, 6, 6)))
                        .addGap(59, 59, 59)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(info, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lsort)
                        .addGap(30, 30, 30)
                        .addComponent(dsort, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(nsort, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(info1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(eventname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(evententer))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(locationenter))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(monthenter))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateenter))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yearenter))
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(viewevents, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submit))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(info, javax.swing.GroupLayout.DEFAULT_SIZE, 12, Short.MAX_VALUE)
                        .addGap(27, 27, 27)
                        .addComponent(info1)
                        .addGap(148, 148, 148))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lsort)
                            .addComponent(dsort)
                            .addComponent(nsort))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        info1.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void evententerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_evententerActionPerformed
        j.setname(eventname.getText());


    }//GEN-LAST:event_evententerActionPerformed

    private void locationenterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationenterActionPerformed
        //String g = (this.location.getText());
        j.setlocation(location.getText());

    }//GEN-LAST:event_locationenterActionPerformed

    private void monthenterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthenterActionPerformed
        //String a = (this.month.getText());
        j.setmonth(month.getText());

    }//GEN-LAST:event_monthenterActionPerformed

    private void dateenterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateenterActionPerformed
        //String b = (this.date.getText());
        try{
        j.setdate(date.getText());
        }catch(IllegalArgumentException i){
            
            System.out.println(i.getMessage());
            info.setText(i.getMessage());
        }
    }//GEN-LAST:event_dateenterActionPerformed

    private void yearenterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearenterActionPerformed
        //String c = (this.year.getText());
        j.setyear(year.getText());

    }//GEN-LAST:event_yearenterActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        j = new event(eventname.getText(), location.getText(), month.getText(), date.getText(), year.getText());
        //String line = "";
     String line = "";
        for (String s1 : j.getValues()) {
            if (s1.equals("")) {
                //info1.setText("Please Enter a valid value in each box");
                return;
            }
        }
     
         
         
     
        f.addevents(j);

        f.addtofile();
        ArrayList<event> e = f.readfromfile();

        for (event e1 : e) {
            ArrayList<String> s = e1.getValues();

            line = e1.toString();

            //line=line+f.toString(e1);
        }

        ((DefaultListModel<String>) display.getModel()).addElement(line);
      
    }//GEN-LAST:event_submitActionPerformed

    private void eventnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eventnameActionPerformed

    private void vieweventsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vieweventsActionPerformed
        //((DefaultListModel<event>)jList1.getModel()).addElement(j);
        String line = null;
        Events.clear();
        ArrayList<event> e = readfromfile();
        for (event e1 : e) {
            ArrayList<String> s = e1.getValues();
            line = e1.toString();
            //line=line+f.toString(e1);
            ((DefaultListModel<String>) display.getModel()).addElement(line);
        }


    }//GEN-LAST:event_vieweventsActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:

    }//GEN-LAST:event_formWindowOpened

    private void lsortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lsortActionPerformed
        
       Events.clear();
        Events=readfromfile();
        Events.sort(event.LocationCompartor);
        
        String line = null;
        
        //ArrayList<event> e = f.getEvents();
        for (event e1 : Events) {
            ArrayList<String> s = e1.getValues();
            line = e1.toString();
            //line=line+f.toString(e1);
            ((DefaultListModel<String>) display.getModel()).addElement(line);
        }
    }//GEN-LAST:event_lsortActionPerformed

    private void dsortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dsortActionPerformed
        Events.clear();
        Events=readfromfile();
        Events.sort(event.DateComparator);
        
        String line = null;
        
        //ArrayList<event> e = f.getEvents();
        for (event e1 : Events) {
            ArrayList<String> s = e1.getValues();
            line = e1.toString();
            //line=line+f.toString(e1);
            ((DefaultListModel<String>) display.getModel()).addElement(line);
        }
    }//GEN-LAST:event_dsortActionPerformed

    private void nsortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nsortActionPerformed
       Events.clear();
        Events=readfromfile();
        Events.sort(event.NameComparator);
        
        String line = null;
        
        //ArrayList<event> e = f.getEvents();
        for (event e1 : Events) {
            ArrayList<String> s = e1.getValues();
            line = e1.toString();
            //line=line+f.toString(e1);
            ((DefaultListModel<String>) display.getModel()).addElement(line);
        }
    }//GEN-LAST:event_nsortActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(guieventcalander.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(guieventcalander.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(guieventcalander.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(guieventcalander.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new guieventcalander().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField date;
    private javax.swing.JButton dateenter;
    private javax.swing.JList display;
    private javax.swing.JButton dsort;
    private javax.swing.JButton evententer;
    private javax.swing.JTextField eventname;
    private javax.swing.JLabel info;
    private javax.swing.JLabel info1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField location;
    private javax.swing.JButton locationenter;
    private javax.swing.JButton lsort;
    private javax.swing.JTextField month;
    private javax.swing.JButton monthenter;
    private javax.swing.JButton nsort;
    private javax.swing.JButton submit;
    private javax.swing.JButton viewevents;
    private javax.swing.JTextField year;
    private javax.swing.JButton yearenter;
    // End of variables declaration//GEN-END:variables
}
